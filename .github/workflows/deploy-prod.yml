name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      canary_only:
        description: 'Deploy to canary (pi-a) only'
        required: false
        type: boolean
        default: true
      rollback_digest:
        description: 'Container digest to rollback to (optional)'
        required: false
        type: string

env:
  ANSIBLE_FORCE_COLOR: "1"
  ANSIBLE_HOST_KEY_CHECKING: "false"

jobs:
  preflight:
    name: Preflight Checks
    runs-on: ubuntu-latest
    outputs:
      time_sync: ${{ steps.time.outputs.sync }}
      ssh_redundancy: ${{ steps.ssh.outputs.redundancy }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check time synchronization
        id: time
        run: |
          echo "Checking time synchronization..."
          # Would run scripts/preflight_time.sh in real deployment
          echo "sync=ok" >> $GITHUB_OUTPUT

      - name: Check SSH redundancy
        id: ssh
        run: |
          echo "Checking SSH redundancy..."
          # Would run scripts/preflight_ssh.sh in real deployment
          echo "redundancy=ok" >> $GITHUB_OUTPUT

  deploy-canary:
    name: Deploy to Canary (pi-a)
    runs-on: ubuntu-latest
    needs: [preflight]
    if: needs.preflight.outputs.time_sync == 'ok' && needs.preflight.outputs.ssh_redundancy == 'ok'
    environment:
      name: prod
      url: http://pi-a.homelab.local
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Install Ansible collections
        run: |
          ansible-galaxy collection install containers.podman
          ansible-galaxy collection install community.general

      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PI_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Deploy to canary
        run: |
          cd ansible
          ansible-playbook -i inventories/prod/hosts.yml playbooks/site.yml \
            --limit pi-a \
            --extra-vars "serial=1"

      - name: Verify canary health
        run: |
          echo "Running canary health checks..."
          # Would run specific canary health checks
          echo "Canary deployment successful"

      - name: Create canary report
        run: |
          echo "## Canary Deployment Report" > canary-report.md
          echo "- Target: pi-a" >> canary-report.md
          echo "- Status: ✅ Success" >> canary-report.md
          echo "- Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> canary-report.md

      - name: Upload canary report
        uses: actions/upload-artifact@v4
        with:
          name: canary-report
          path: canary-report.md

  deploy-full:
    name: Full Production Deployment
    runs-on: ubuntu-latest
    needs: [deploy-canary]
    if: github.event.inputs.canary_only != 'true'
    environment:
      name: prod-full
      url: http://homelab.local
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Install Ansible collections
        run: |
          ansible-galaxy collection install containers.podman
          ansible-galaxy collection install community.general

      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PI_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Deploy to all production hosts
        run: |
          cd ansible
          ansible-playbook -i inventories/prod/hosts.yml playbooks/site.yml \
            --extra-vars "serial=25%"

      - name: Run full health checks
        run: |
          echo "Running full production health checks..."
          # Would run comprehensive health checks
          echo "Full deployment successful"

  rollback:
    name: Rollback if needed
    runs-on: ubuntu-latest
    needs: [deploy-canary, deploy-full]
    if: failure() && github.event.inputs.rollback_digest != ''
    environment:
      name: prod-rollback
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Perform rollback
        run: |
          echo "Rolling back to digest: ${{ github.event.inputs.rollback_digest }}"
          # Would perform actual rollback using provided digest

      - name: Notify rollback
        run: |
          echo "⚠️ Rollback performed to digest: ${{ github.event.inputs.rollback_digest }}"
