---
name: CI

on:
  pull_request:
    branches: [main, dev]
  push:
    branches: [dev]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install ansible ansible-lint yamllint

      - name: Run yamllint
        run: yamllint . -c .yamllint

      - name: Run ansible-lint
        run: ansible-lint

  molecule:
    name: Molecule Test
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        role:
          - base
          - podman
          - monitoring
          - logging
          - ingress
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install ansible molecule molecule-podman pytest pytest-testinfra
          ansible-galaxy collection install containers.podman community.general ansible.posix

      - name: Run Molecule tests
        run: |
          cd ansible/roles/${{ matrix.role }}
          molecule test || true  # Allow failures for now until roles are complete
        env:
          MOLECULE_DISTRO: ubuntu2404

  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          scandir: './scripts'

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
