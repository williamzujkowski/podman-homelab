name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  ANSIBLE_FORCE_COLOR: "1"
  ANSIBLE_HOST_KEY_CHECKING: "false"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint yamllint

      - name: Run yamllint
        run: yamllint .

      - name: Run ansible-lint
        run: |
          cd ansible
          ansible-lint

  validate-quadlet:
    name: Validate Quadlet Files
    runs-on: ubuntu-latest
    container:
      image: quay.io/podman/stable:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Quadlet files
        run: |
          for file in quadlet/*.container; do
            echo "Validating $file..."
            podman system service --time=0 &
            sleep 2
            /usr/lib/systemd/system-generators/podman-system-generator --dryrun "$file"
          done

  test-ansible-playbooks:
    name: Test Ansible Playbooks
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Install Ansible collections
        run: |
          ansible-galaxy collection install containers.podman
          ansible-galaxy collection install community.general

      - name: Run playbooks in check mode
        run: |
          cd ansible
          # Test syntax of all playbooks
          for playbook in playbooks/*.yml; do
            echo "Testing $playbook syntax..."
            ansible-playbook --syntax-check "$playbook"
          done

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
