name: Deploy to Staging

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'ansible/**'
      - 'quadlet/**'
      - '.github/workflows/deploy-staging.yml'

env:
  ANSIBLE_FORCE_COLOR: "1"
  ANSIBLE_HOST_KEY_CHECKING: "false"

jobs:
  preflight:
    name: Preflight Checks
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.check.outputs.continue }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run preflight checks
        id: check
        run: |
          echo "Running preflight checks..."
          echo "continue=true" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to Staging VMs
    runs-on: ubuntu-latest
    needs: [preflight]
    if: needs.preflight.outputs.continue == 'true'
    environment:
      name: staging
      url: http://staging.homelab.local
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Install Ansible collections
        run: |
          ansible-galaxy collection install containers.podman
          ansible-galaxy collection install community.general

      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Configure SSH config
        run: |
          cat >> ~/.ssh/config << 'CONFIG'
          Host vm-a
            HostName ${{ secrets.VM_A_IP }}
            User ${{ secrets.VM_USER }}
            IdentityFile ~/.ssh/id_ed25519
            StrictHostKeyChecking no
          
          Host vm-b
            HostName ${{ secrets.VM_B_IP }}
            User ${{ secrets.VM_USER }}
            IdentityFile ~/.ssh/id_ed25519
            StrictHostKeyChecking no
          
          Host vm-c
            HostName ${{ secrets.VM_C_IP }}
            User ${{ secrets.VM_USER }}
            IdentityFile ~/.ssh/id_ed25519
            StrictHostKeyChecking no
          CONFIG

      - name: Test connectivity
        run: |
          for vm in vm-a vm-b vm-c; do
            ssh $vm "echo 'Connected to $vm'"
          done

      - name: Deploy to staging
        run: |
          cd ansible
          ansible-playbook -i inventories/staging/hosts.yml playbooks/site.yml

      - name: Run health checks
        run: |
          chmod +x scripts/healthcheck.sh
          scripts/healthcheck.sh

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment to staging successful!"
          else
            echo "❌ Deployment to staging failed!"
          fi
