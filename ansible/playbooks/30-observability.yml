---
# Observability stack deployment playbook
- name: Deploy observability stack
  hosts: all
  gather_facts: yes
  become: yes
  serial: "{{ serial | default(1) }}"

  pre_tasks:
    - name: Check Podman deployment
      ansible.builtin.stat:
        path: /etc/ansible/facts.d/podman.fact
      register: podman_check

    - name: Fail if Podman not deployed
      ansible.builtin.fail:
        msg: "Podman not deployed. Run 20-podman.yml first."
      when: not podman_check.stat.exists

    - name: Create config directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /etc/prometheus
        - /etc/grafana
        - /etc/loki
        - /etc/promtail
        - /etc/caddy
        - /etc/containers/systemd

  tasks:
    - name: Deploy Prometheus configuration
      ansible.builtin.copy:
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s
          
          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']
            
            - job_name: 'node'
              static_configs:
                - targets:
                  - '{{ hostvars["vm-a"]["ansible_host"] }}:9100'
                  - '{{ hostvars["vm-b"]["ansible_host"] }}:9100'
                  - '{{ hostvars["vm-c"]["ansible_host"] }}:9100'
            
            - job_name: 'grafana'
              static_configs:
                - targets: ['localhost:3000']
        dest: /etc/prometheus/prometheus.yml
        mode: '0644'
      when: inventory_hostname == "vm-a"

    - name: Deploy Loki configuration
      ansible.builtin.copy:
        content: |
          auth_enabled: false
          
          server:
            http_listen_port: 3100
            grpc_listen_port: 9096
          
          common:
            path_prefix: /loki
            storage:
              filesystem:
                chunks_directory: /loki/chunks
                rules_directory: /loki/rules
            replication_factor: 1
            ring:
              kvstore:
                store: inmemory
          
          schema_config:
            configs:
              - from: 2020-10-24
                store: boltdb-shipper
                object_store: filesystem
                schema: v11
                index:
                  prefix: index_
                  period: 24h
          
          limits_config:
            enforce_metric_name: false
            reject_old_samples: true
            reject_old_samples_max_age: 168h
        dest: /etc/loki/loki-config.yaml
        mode: '0644'
      when: inventory_hostname == "vm-a"

    - name: Deploy Promtail configuration
      ansible.builtin.template:
        content: |
          server:
            http_listen_port: 9080
            grpc_listen_port: 0
          
          positions:
            filename: /tmp/positions.yaml
          
          clients:
            - url: http://{{ hostvars["vm-a"]["ansible_host"] }}:3100/loki/api/v1/push
          
          scrape_configs:
            - job_name: journal
              journal:
                json: false
                max_age: 12h
                labels:
                  job: systemd-journal
                  host: {{ inventory_hostname }}
              relabel_configs:
                - source_labels: ['__journal__systemd_unit']
                  target_label: 'unit'
        dest: /etc/promtail/promtail-config.yaml
        mode: '0644'

    - name: Deploy Caddy configuration
      ansible.builtin.copy:
        content: |
          :80 {
              respond "Homelab Ingress"
          }
          
          :3000 {
              reverse_proxy localhost:3000
          }
          
          :9090 {
              reverse_proxy localhost:9090
          }
        dest: /etc/caddy/Caddyfile
        mode: '0644'
      when: inventory_hostname == "vm-b"

    - name: Copy Quadlet service definitions
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/containers/systemd/
        mode: '0644'
      loop:
        - "{{ playbook_dir }}/../../quadlet/prometheus.container"
        - "{{ playbook_dir }}/../../quadlet/grafana.container"
        - "{{ playbook_dir }}/../../quadlet/loki.container"
        - "{{ playbook_dir }}/../../quadlet/promtail.container"
        - "{{ playbook_dir }}/../../quadlet/node-exporter.container"
        - "{{ playbook_dir }}/../../quadlet/caddy.container"

    - name: Create Podman volumes
      containers.podman.podman_volume:
        name: "{{ item }}"
        state: present
      loop:
        - prometheus-data
        - grafana-data
        - loki-data
        - caddy-data
        - caddy-config

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Start node-exporter on all hosts
      ansible.builtin.systemd:
        name: node-exporter.service
        state: started
        enabled: yes

    - name: Start Prometheus on vm-a
      ansible.builtin.systemd:
        name: prometheus.service
        state: started
        enabled: yes
      when: inventory_hostname == "vm-a"

    - name: Start Grafana on vm-a
      ansible.builtin.systemd:
        name: grafana.service
        state: started
        enabled: yes
      when: inventory_hostname == "vm-a"

    - name: Start Loki on vm-a
      ansible.builtin.systemd:
        name: loki.service
        state: started
        enabled: yes
      when: inventory_hostname == "vm-a"

    - name: Start Promtail on all hosts
      ansible.builtin.systemd:
        name: promtail.service
        state: started
        enabled: yes

    - name: Start Caddy on vm-b
      ansible.builtin.systemd:
        name: caddy.service
        state: started
        enabled: yes
      when: inventory_hostname == "vm-b"

  post_tasks:
    - name: Wait for services to be healthy
      ansible.builtin.wait_for:
        port: "{{ item.port }}"
        host: "{{ item.host | default('localhost') }}"
        timeout: 60
        state: started
      loop:
        - { port: 9100, host: "{{ ansible_host }}" }  # node-exporter
        - { port: 9090, host: "{{ hostvars['vm-a']['ansible_host'] }}" }  # prometheus
        - { port: 3000, host: "{{ hostvars['vm-a']['ansible_host'] }}" }  # grafana
        - { port: 3100, host: "{{ hostvars['vm-a']['ansible_host'] }}" }  # loki
      when: item.host is defined

    - name: Display service URLs
      ansible.builtin.debug:
        msg: |
          Services deployed successfully!
          
          Prometheus: http://{{ hostvars['vm-a']['ansible_host'] }}:9090
          Grafana: http://{{ hostvars['vm-a']['ansible_host'] }}:3000 (admin/admin)
          Loki: http://{{ hostvars['vm-a']['ansible_host'] }}:3100
          
          Node Exporters:
            - http://{{ hostvars['vm-a']['ansible_host'] }}:9100/metrics
            - http://{{ hostvars['vm-b']['ansible_host'] }}:9100/metrics
            - http://{{ hostvars['vm-c']['ansible_host'] }}:9100/metrics
      run_once: true