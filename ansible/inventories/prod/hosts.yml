---
# Production Raspberry Pi Inventory
# WARNING: Changes here affect production systems
# Follow canary deployment pattern: pi-a first, then rollout

all:
  children:
    pis:
      hosts:
        pi-a:
          ansible_host: 192.168.1.12
          ansible_user: pi
          ansible_ssh_private_key_file: ~/.ssh/pi_ed25519
          deployment_role: canary
          hostname: pi-a.grenlan.com
          short_hostname: pi-a
          node_labels:
            - monitoring
            - primary
        
        pi-b:
          ansible_host: 192.168.1.11
          ansible_user: pi
          ansible_ssh_private_key_file: ~/.ssh/pi_ed25519
          deployment_role: production
          hostname: pi-b.grenlan.com
          short_hostname: pi-b
          node_labels:
            - ingress
            - worker
        
        pi-c:
          ansible_host: 192.168.1.10
          ansible_user: pi
          ansible_ssh_private_key_file: ~/.ssh/pi_ed25519
          deployment_role: production
          hostname: pi-c.grenlan.com
          short_hostname: pi-c
          node_labels:
            - worker
            - apps
        
        pi-d:
          ansible_host: 192.168.1.13
          ansible_user: pi
          ansible_ssh_private_key_file: ~/.ssh/pi_ed25519
          deployment_role: production
          hostname: pi-d.grenlan.com
          short_hostname: pi-d
          node_labels:
            - storage
            - backup
      
      vars:
        # Common Pi configuration
        ansible_python_interpreter: /usr/bin/python3
        
        # Domain configuration
        domain: grenlan.com
        search_domains:
          - grenlan.com
          - local
        
        # Architecture-specific settings for ARM
        container_arch: arm64
        podman_storage_driver: overlay
        
        # Production-specific settings
        deployment_environment: production
        enable_auto_updates: false  # Manual updates only
        enable_monitoring: true
        enable_alerting: true
        
        # Time synchronization requirements (CLAUDE.md golden rule)
        ntp_servers:
          - time.cloudflare.com
          - time.nist.gov
        ntp_max_drift_ms: 100
        ntp_max_stratum: 3
        
        # Container security
        enable_rootless: true
        use_digest_pinning: true
        
        # Network settings
        internal_network: 192.168.1.0/24
        
        # Service placement (updated for actual node roles)
        service_placement:
          prometheus:
            hosts: [pi-a]
            replicas: 1
          grafana:
            hosts: [pi-a]
            replicas: 1
          loki:
            hosts: [pi-a]
            replicas: 1
          traefik:
            hosts: [pi-b]
            replicas: 1
          minio:
            hosts: [pi-d]
            replicas: 1
          node_exporter:
            hosts: [pi-a, pi-b, pi-c, pi-d]
            replicas: 1  # per host
          promtail:
            hosts: [pi-a, pi-b, pi-c, pi-d]
            replicas: 1  # per host
    
    # Group definitions for targeted deployments
    monitoring_nodes:
      hosts:
        pi-a:
      vars:
        role_type: monitoring
    
    ingress_nodes:
      hosts:
        pi-b:
      vars:
        role_type: ingress
    
    worker_nodes:
      hosts:
        pi-c:
      vars:
        role_type: worker
    
    storage_nodes:
      hosts:
        pi-d:
      vars:
        role_type: storage
        storage_path: /storage
    
    canary:
      hosts:
        pi-a:
      vars:
        deployment_stage: canary
        
    production_full:
      hosts:
        pi-b:
        pi-c:
        pi-d:
      vars:
        deployment_stage: production